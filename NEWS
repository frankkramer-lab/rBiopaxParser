rBiopaxParser 2.12
===========

* Integrated functionality writen by Nirupama Benis (nirupama.benis@wur.nl). Added function pathway2Graph which creates a graph object containing all the interactions within a pathway. This is in contrast to pathway2RegulatoryGraph which only honors regulatory controls like activations and inhibitions.
* BUGFIX: fixed download link for Reactome Homo Sapiens data
* BUGFIX: fixed DESCRIPTION file. URL of the GitHub Repo is now: https://github.com/frankkramer-lab/rBiopaxParser

rBiopaxParser 2.1.7
===========

* BUGFIX: fixed setkey for parsed biopax models
* BUGFIX: fixed possible uses of complete URLs for ids (e.g. in PathwayCommons)
* BUGFIX: fixed parameter checking failing due to data.table version 1.9.2. This will be fixed anyways when data.table 1.9.3. is out.

rBiopaxParser 2.1.5
===========

* BUGFIX: Fixed several bugs relating to the default BioPAX version parameter biopaxlevel.
* The package requires R >= 3.0 due to data.table requiring Reshape2, requiring plyr, requiring Rcpp. :-(

rBiopaxParser 2.1.3
===========

* BUGFIX: Switched from rep_len to rep in order to continue R<3.0 support.

rBiopaxParser 2.1.1
===========

* Attention: This is a major update and might introduce backwards incompatibility to previously parsed data!
* Speed issues in previous versions were common with huge databases like Reactome or PathwayCommons, and with search & replace operations in the internal data.frame.
* The data.table package is now required and imported for rBiopaxParser.
* The internal data model has been switched from data.frame to data.table to speed up working with the rBiopaxParser. 

* The "df" slot of the biopax object, a data.frame object, is gone. Use the "dt" slot, a data.table, to directly access to biopax data.
* If you work with the "df" slot of the biopax object in your current code, you have to make yourself comfortable with using the data.table syntax!
* All functions which return a subset of the internal data, return a data.table object now.

* A long standing bug of deeply nested XML instances has been fixed. See http://permalink.gmane.org/gmane.science.biology.informatics.conductor/48534

* The default parameter specifying the Biopax Level (usually called biopaxlevel) has been changed and defaults to 3 now.

* Functions selectInstances, getInstanceProperty, getReferencedIDs, splitComplex, getInstanceClass and many others now acceps either a biopax object or a compatible internal data.table.

rBiopaxParser 1.3.3
===========

* fixed download links. Added links for the NCI databases with fixed XML encoding ( see discussion at http://sourceforge.net/mailarchive/message.php?msg_id=30106560)
* added TemplateReactionRegulation to be plotted in pathway2RegulatoryGraph
* future versions will likely switch to data.table support to deal with huge BioPAX databases from Reactome et al 

rBiopaxParser 1.2
===========

* some administrative stuff: moved vignette from inst/doc directory to vignettes directory

rBiopaxParser 1.1.1
===========

* fixed link to Reactome files in function downloadBiopaxData

rBiopaxParser 1.0
===========

* The first Bioconductor Release! Yeah!

rBiopaxParser 0.99.10
===========

* Changed function getInstanceProperty, this now returns all names for Biopaxl Level 3 instances: name, displayName and standardName by default. Use parameter to turn this behaivior off.
* getXrefAnnotations now correctly follows memberEntityReferences and memberPhysicalEntitys to obtain more annotations for physicalEntity instances.
* Fixed a problem with a too small buffer for generating BioPAX data in internal_propertyListToDF.  

rBiopaxParser 0.99.9
===========

* Added function removeNodes. This gracefully removes nodes from a regulatory graph: Connecting parents and children by their multiplied edge weights.
* Added function combineNodes. This gracefully combines nodes from a regulatory graph. This is basically a wrapper for graph::combineNodes(nodes, graph, newName, collapseFunction=max).

rBiopaxParser 0.99.8
===========

* Speed up of many function which were beautifully programmed but became increasingly slow when using the whole Reactome database.

* Fixed a nasty bug where a complex without any pyhsical entities could cause many functions to fail badly.

* Fixed CITATION file. 

rBiopaxParser 0.99.7
===========

* Fixed getXrefAnnotations. This function now works with Biopax Level 3 and can retrieve all Xref annotations of any given vector of instance ids.

* Added CITATION file! rBiopaxParser was pubished in Bioinformatics! 

* rBiopaxParser - an R package to parse, modify and visualize BioPAX data. Kramer F, Bayerlova M, Klemm F, Bleckmann A, Beissbarth T. Bioinformatics (2013) 29(4): 520-522.

* rBiopaxParser has been accepted to Bioconductor! http://www.bioconductor.org/packages/devel/bioc/html/rBiopaxParser.html

* README.md has been updated accordingly with steps to install directly from Bioconductor.

* Function selectInstances correctly returns all referenced instances with parameter "includeReferencedInstances=TRUE" now.

rBiopaxParser 0.99.6
===========

* Fixed pathway layouting. It broke simarily to: http://permalink.gmane.org/gmane.science.biology.informatics.conductor/44745

* Function createBiopax can create Biopax Level 3 models now!

* Function listInstances was very slow. It is alot faster now with huge databases like Reactome.

* Functions pathway2Geneset, pathway2RegulatoryGraph, pathway2AdjacencyMatrix now fully support nested Subpathways and PathwayOrder/PathwaySteps in Biopax Level 2 and Level 3.

* Started to integrate RUnit tests for some of my functions. More to come. 

rBiopaxParser 0.99.5
===========

* Submitted some fixes. colorGraphNodes is finally working (again) using graph and Rgraphviz packages.

rBiopaxParser 0.99.3
===========

* We are finally supporting BioPAX level 3 now! All functions (except for getXrefAnnotations) have been updated and work correctly with BioPAX Level 2 and Level 3 objects.


rBiopaxParser 0.99.0
===========

* Pushing version number to 0.99.0 according to Bioconductor checklist 

rBiopaxParser 0.23
===========

* Fixes to documentation. All function documentation is featuring examples now. 

rBiopaxParser 0.21
===========

* Attention: Major function renaming and restructuring in this version! This unfortunatly leads to incompatibilities with the previous versions due to the renaming.

* The variables "instancetype" and "instanceid" have been renamed to "class" and "id". This keeps everyones code shorter and matches general ontology syntax. 

* Function names of the ever-growing number of convenience functions were a mess and hard to understand. I have taken the time to refactor and consolidate the collection of functions to increase usability and give function(name)s a common structure. This will also serve as a stepping stone to allow biopax level 3 integration.

* Functions with names starting "get" were previously being used for all selecting/accessing of data. These functions are now effectively being split up into functions with names "select" and "list".

* Functions with prefix "select" return a TRUE/FALSE index vector for the whole biopax internal data.frame. This allows easy combination of select statements via logical & and |.

* Functions with prefix "list" return a specific list of IDs or items depending on the function definition.

* Functions with prefix "get" return newly created objects or informations about the biopax data.frame or its instance(s). 

rBiopaxParser 0.15
===========

* Added function createBiopax which creates a new Biopax model from scratch.

* Added some more parameter checks.

* Added verbosity to writeBiopax since re-exporting the NCI Pathway Interaction Database took almost 15 minutes.

* Updated the vignette. Nice pictures, text and more!

rBiopaxParser 0.14
===========

* Some more sanity checks added to fix sloppy BioPAX models 

* Added functions getBiopaxIDsByName, which does as the name suggests, and getXrefAnnotations, which returns all Xref annontations of given Biopax IDs.

* Function pathway2RegulatoryGraph now has the optional parameter useIDasNodenames, this causes a regulatory graph to be created with the Biopax IDs used instead of the instance names.

* Function plotRegulatoryGraph can be passed logical argument layoutGraph, which can be used to stop the function from re-layouting the graph in case you modified it.

* Added a check for BioPAX Levels different from Level 2 and started to build a foundation to enable those too.

* Unzipping functionality of downloadBiopaxData only works using Linux. Added checks and instructions for Windows users. 
 
rBiopaxParser 0.13
===========

* Added functions removeInstance, removeProperties, addPhysicalEntity, addPhysicalEntityParticipant, addBiochemicalReaction, addControl.

* See new examples for modifying a biopax model with R in the short vignette! 

rBiopaxParser 0.12
===========

* Fixed some documentation and vignette pdfs. 

rBiopaxParser 0.11
===========

* Set packages RCurl and Rgraphviz from imports to suggests. This means you will not have to have these installed to run most of the commands. However layouting the graphs requires Rgraphviz and downloading data requires RCurl. 

rBiopaxParser 0.10
===========

* Detailed installation instructions are available now. rBiopaxParser depends on some packages which might be a hassle to install. Check out the README or github front page for instructions!

* Provided some more documentation.

* Fixed a very embarrassing typo in downloadBiopaxData.

rBiopaxParser 0.09
===========

* Provided some more documentation.

* getNeighborhood: a function to build a neigborhood graph for molecules

rBiopaxParser 0.08
===========

* First version on GitHub! Code still needs some cleaning up but everything works, longer examples comming next!

rBiopaxParser 0.06
===========

* Visualization & Layouting added. Check out new functions 

* layoutRegulatoryBiopaxGraph, plotRegulatoryBiopaxGraph

* intersectGraphs, uniteGraphs, diffGraphs

rBiopaxParser 0.04
===========

* Building regulatory graphs from biopax model works now!

* pathway2adjacancyMatrix, pathway2RegulatoryGraph, 

rBiopaxParser 0.01
===========

* Parsing works! Alot of thing changing quickly now, still bugs to fix.
